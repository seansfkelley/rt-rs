use std::str::FromStr;
use math::*;
use core::*;
use importer::scene_builder::SceneBuilder;

grammar(builder: &mut SceneBuilder);

match {
    // Ripped from https://www.regular-expressions.info/floatingpoint.html
    r"[-+]?[0-9]*\.?[0-9]+" => FLOAT,
} else {
    r"[0-9]+" => INTEGER,
    _,
}

pub SceneFile: () = {
    Statement* => {},
};

Statement: () = {
    "camera_position" <p:Point> => builder.camera_position(<>),
    "camera_up" <v:Vec3> => builder.camera_up(<>),
    "camera_look_at" <p:Point> => builder.camera_look_at(<>),
    "antialias" <n:Integer> => builder.antialias(<>),
};

Point: Point = <f1:Float> <f2:Float> <f3:Float> => Point { x: f1, y: f2, z: f3 };
Vec3: Vec3 = <f1:Float> <f2:Float> <f3:Float> => Vec3 { x: f1, y: f2, z: f3 };

Float: f64 = FLOAT => f64::from_str(<>).unwrap();
Integer: u32 = INTEGER => u32::from_str(<>).unwrap();
